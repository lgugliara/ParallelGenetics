#define GROUP_SIZE 64

// Evaluation
#pragma kernel Evaluate
// Crossover stages
#pragma kernel EliteCrossover
#pragma kernel TournamentCrossover
// Mutation stages
#pragma kernel Mutate
// Picking stages
#pragma kernel PickValues
#pragma kernel PickLookups

#include "utils/_BufferUtils.cginc"
#include "utils/_VariableUtils.cginc"

#include "libs/Context.cginc"
#include "libs/Random.cginc"
#include "libs/Arrays.cginc"

// Evaluation

// todo: set numthreads.x as chromosome' genes count
[numthreads(GROUP_SIZE,1,1)]
void Evaluate (uint3 id : SV_DispatchThreadID)
{

}

// Crossover stages

// todo: set numthreads.x as chromosome' genes count
[numthreads(GROUP_SIZE,1,1)]
void EliteCrossover (uint3 id : SV_DispatchThreadID)
{

}

// todo: set numthreads.x as chromosome' genes count
[numthreads(GROUP_SIZE,1,1)]
void TournamentCrossover (uint3 id : SV_DispatchThreadID)
{

}

// Mutation stages

#include "utils/MutationUtils.cginc"

// todo: set numthreads.x as chromosome' genes count
[numthreads(GROUP_SIZE,1,1)]
void Mutate (uint3 id : SV_DispatchThreadID)
{
    Context context = GetContext(id.x);
    
    Mutation_Insert(context);
    //Mutation_Remove(context);
    //Mutation_Inner(context);
}

// Picking stages

// todo: set numthreads.x as chromosome' genes count
[numthreads(GROUP_SIZE,1,1)]
void PickValues (uint3 id : SV_DispatchThreadID)
{

}

// todo: set numthreads.x as chromosome' genes count
[numthreads(GROUP_SIZE,1,1)]
void PickLookups (uint3 id : SV_DispatchThreadID)
{

}